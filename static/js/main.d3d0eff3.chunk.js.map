{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","sortReverse","setSortReverse","visibleGoods","concat","sort","good1","good2","localeCompare","length","reverse","_jsxs","className","children","_jsx","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,MACtBC,EAAoB,SAEbC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAsCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAY,GAAAC,OAAOf,GAkBzB,OAhBAc,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAIV,IAAcP,EACTgB,EAAME,cAAcD,GAGzBV,IAAcN,EACTe,EAAMG,OAASF,EAAME,OAGvB,KAGLR,GACFE,EAAaO,UAIbC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAaR,IAC5BsB,UAAWK,IAAG,iBAAkB,CAC9B,WAAYpB,IAAcP,IACzBuB,SACJ,wBAIDC,cAAA,UACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAaP,IAC5BqB,UAAWK,IAAG,oBAAqB,CACjC,WAAYpB,IAAcN,IACzBsB,SACJ,mBAIDC,cAAA,UACEC,KAAK,SACLC,QAAS,kBAAMd,GAAgBD,IAC/BW,UAAWK,IAAG,oBAAqB,CACjC,YAA4B,IAAhBhB,IACXY,SACJ,aAGe,KAAdhB,GAAoBI,IACpBa,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVI,QAAS,WACPlB,EAAa,IACbI,GAAe,IACfW,SACH,aAMLC,cAAA,MAAAD,SACGV,EAAae,KAAI,SAAAC,GAAI,OACpBL,cAAA,MAAI,UAAQ,OAAMD,SAAEM,aCvF9BC,IAASC,OACPP,cAACtB,EAAG,IACJ8B,SAASC,eAAe,W","file":"static/js/main.d3d0eff3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((good1, good2) => {\n    if (sortField === SORT_FIELD_ALPHABET) {\n      return good1.localeCompare(good2);\n    }\n\n    if (sortField === SORT_FIELD_LENGTH) {\n      return good1.length - good2.length;\n    }\n\n    return 0;\n  });\n\n  if (sortReverse) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortReverse(!sortReverse)}\n          className={cn('button is-warning', {\n            'is-light': sortReverse !== true,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortField !== '' || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}